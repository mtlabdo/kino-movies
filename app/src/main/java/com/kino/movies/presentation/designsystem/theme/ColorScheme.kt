package com.kino.movies.presentation.designsystem.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme

val LightColorScheme = lightColorScheme(
    primary = kino_light_primary,
    onPrimary = kino_light_onPrimary,
    primaryContainer = kino_light_primaryContainer,
    onPrimaryContainer = kino_light_onPrimaryContainer,
    secondary = kino_light_secondary,
    onSecondary = kino_light_onSecondary,
    secondaryContainer = kino_light_secondaryContainer,
    onSecondaryContainer = kino_light_onSecondaryContainer,
    tertiary = kino_light_tertiary,
    onTertiary = kino_light_onTertiary,
    tertiaryContainer = kino_light_tertiaryContainer,
    onTertiaryContainer = kino_light_onTertiaryContainer,
    error = kino_light_error,
    errorContainer = kino_light_errorContainer,
    onError = kino_light_onError,
    onErrorContainer = kino_light_onErrorContainer,
    background = kino_light_background,
    onBackground = kino_light_onBackground,
    surface = kino_light_surface,
    onSurface = kino_light_onSurface,
    surfaceVariant = kino_light_surfaceVariant,
    onSurfaceVariant = kino_light_onSurfaceVariant,
    outline = kino_light_outline,
    inverseOnSurface = kino_light_inverseOnSurface,
    inverseSurface = kino_light_inverseSurface,
    inversePrimary = kino_light_inversePrimary,
    surfaceTint = kino_light_surfaceTint,
    outlineVariant = kino_light_outlineVariant,
    scrim = kino_light_scrim,
)

val DarkColorScheme = darkColorScheme(
    primary = kino_dark_primary,
    onPrimary = kino_dark_onPrimary,
    primaryContainer = kino_dark_primaryContainer,
    onPrimaryContainer = kino_dark_onPrimaryContainer,
    secondary = kino_dark_secondary,
    onSecondary = kino_dark_onSecondary,
    secondaryContainer = kino_dark_secondaryContainer,
    onSecondaryContainer = kino_dark_onSecondaryContainer,
    tertiary = kino_dark_tertiary,
    onTertiary = kino_dark_onTertiary,
    tertiaryContainer = kino_dark_tertiaryContainer,
    onTertiaryContainer = kino_dark_onTertiaryContainer,
    error = kino_dark_error,
    errorContainer = kino_dark_errorContainer,
    onError = kino_dark_onError,
    onErrorContainer = kino_dark_onErrorContainer,
    background = kino_dark_background,
    onBackground = kino_dark_onBackground,
    surface = kino_dark_surface,
    onSurface = kino_dark_onSurface,
    surfaceVariant = kino_dark_surfaceVariant,
    onSurfaceVariant = kino_dark_onSurfaceVariant,
    outline = kino_dark_outline,
    inverseOnSurface = kino_dark_inverseOnSurface,
    inverseSurface = kino_dark_inverseSurface,
    inversePrimary = kino_dark_inversePrimary,
    surfaceTint = kino_dark_surfaceTint,
    outlineVariant = kino_dark_outlineVariant,
    scrim = kino_dark_scrim,
)